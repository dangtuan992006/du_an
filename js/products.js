// üìÅ ƒê∆∞·ªùng d·∫´n t·ªõi file JSON m·∫∑c ƒë·ªãnh (khi ch∆∞a c√≥ d·ªØ li·ªáu trong localStorage)
const JSON_PATH = '../data/products.json';

/* =====================================================
                üß© HI·ªÇN TH·ªä DANH S√ÅCH S·∫¢N PH·∫®M
   ===================================================== */
function displayProducts(products) {
    const productList = document.getElementById('product-list');

    // N·∫øu kh√¥ng c√≥ s·∫£n ph·∫©m, hi·ªÉn th·ªã tr·∫°ng th√°i r·ªóng
    if (!products || products.length === 0) {
        productList.innerHTML = `
            <div class="empty-state">
                <i class="fa-solid fa-box-open"></i>
                <p>Ch∆∞a c√≥ s·∫£n ph·∫©m n√†o</p>
            </div>
        `;
        return;
    }

    // Hi·ªÉn th·ªã danh s√°ch s·∫£n ph·∫©m (m·ªói s·∫£n ph·∫©m l√† 1 th·∫ª card)
    productList.innerHTML = products.map(product => `
        <div class="product-card ${product.hidden ? 'hidden' : ''}" data-id="${product.id}">
            <!-- H√¨nh ·∫£nh -->
            <img src="${product.image}" 
                alt="${product.name}" 
                class="product-image" 
                onerror="this.src='https://via.placeholder.com/400x400?text=No+Image'">

            <!-- T√™n -->
            <div class="product-name">${product.name}</div>

            <!-- Th√¥ng tin chi ti·∫øt -->
            <div class="product-info">
                <h3>${product.name}</h3>
                <p><i>${product.category}</i></p>
                <p><i class="fa-solid fa-align-left"></i> ${product.description}</p>
                <p class="price"><i class="fa-solid fa-money-bill-wave"></i> ${product.price} ƒë·ªìng/kg</p>
                <p class="stock">C√≤n: ${product.stock}</p>
            </div>
            
            <!-- H√†ng n√∫t ch·ª©c nƒÉng -->
            <div class="actions-top">
                <!-- N√∫t s·ª≠a -->
                <button class="edit-btn" data-id="${product.id}">
                    <i class="fa-solid fa-pen"></i>
                </button>

                <!-- N√∫t ·∫©n/hi·ªán -->
                <button class="hide-btn" data-id="${product.id}">
                    <i class="fa-solid ${product.hidden ? 'fa-eye' : 'fa-eye-slash'}"></i>
                </button>

                <!-- N√∫t x√≥a -->
                <button class="delete-btn" data-id="${product.id}">
                    <i class="fa-solid fa-trash"></i>
                </button>
            </div>
        </div>
    `).join('');

    // G·∫Øn s·ª± ki·ªán cho c√°c n√∫t sau khi render
    attachEvents();
}

/* =====================================================
        üîó G·∫ÆN S·ª∞ KI·ªÜN CHO C√ÅC N√öT: X√ìA / ·∫®N / S·ª¨A
   ===================================================== */
function attachEvents() {
    const products = JSON.parse(localStorage.getItem('products')) || [];

    /* üóëÔ∏è X√ìA S·∫¢N PH·∫®M */
    document.querySelectorAll('.delete-btn').forEach(btn => {
        btn.onclick = () => {
            const id = btn.dataset.id;
            const newProducts = products.filter(p => p.id != id);
            localStorage.setItem('products', JSON.stringify(newProducts));
            displayProducts(newProducts);
        };
    });

    /* üëÅÔ∏è ·∫®N / HI·ªÜN S·∫¢N PH·∫®M */
    document.querySelectorAll('.hide-btn').forEach(btn => {
        btn.onclick = () => {
            const id = btn.dataset.id;
            products.forEach(p => { 
                if (p.id == id) p.hidden = !p.hidden; // ƒë·∫£o tr·∫°ng th√°i ·∫©n/hi·ªán
            });
            localStorage.setItem('products', JSON.stringify(products));
            displayProducts(products);
        };
    });

    /* ‚úèÔ∏è S·ª¨A S·∫¢N PH·∫®M */
    document.querySelectorAll('.edit-btn').forEach(btn => {
        btn.onclick = () => {
            const id = btn.dataset.id;
            const product = products.find(p => p.id == id);
            if (!product) return;

            const card = btn.closest('.product-card');

            // Bi·∫øn card th√†nh form s·ª≠a
            card.innerHTML = `
                <div class="product-info">
                    <input type="text" id="edit-name" value="${product.name}">
                    <input type="text" id="edit-image" value="${product.image}">
                    <input type="number" id="edit-price" value="${product.price}">
                    <input type="text" id="edit-description" value="${product.description}">
                    <input type="text" id="edit-category" value="${product.category}">
                    <input type="number" id="edit-stock" value="${product.stock}">
                    <div class="actions">
                        <button id="save-edit"><i class="fa-solid fa-check"></i></button>
                        <button id="cancel-edit"><i class="fa-solid fa-xmark"></i></button>
                    </div>
                </div>
            `;

            // N√∫t l∆∞u thay ƒë·ªïi
            card.querySelector('#save-edit').onclick = () => {
                product.name = card.querySelector('#edit-name').value;
                product.image = card.querySelector('#edit-image').value;
                product.price = parseInt(card.querySelector('#edit-price').value);
                product.description = card.querySelector('#edit-description').value;
                product.category = card.querySelector('#edit-category').value;
                product.stock = parseInt(card.querySelector('#edit-stock').value);
                
                localStorage.setItem('products', JSON.stringify(products));
                displayProducts(products);
            };

            // N√∫t h·ªßy ch·ªânh s·ª≠a
            card.querySelector('#cancel-edit').onclick = () => displayProducts(products);
        };
    });
}

/* =====================================================
                    ‚ûï TH√äM S·∫¢N PH·∫®M M·ªöI
   ===================================================== */
function createAddProductCard() {
    const productList = document.getElementById('product-list');
    const card = document.createElement('div');
    card.classList.add('product-card', 'new-product-card');

    // T·∫°o form nh·∫≠p th√¥ng tin s·∫£n ph·∫©m m·ªõi
    card.innerHTML = `
        <div class="product-info">
            <input type="text" id="new-name" placeholder="T√™n s·∫£n ph·∫©m" required>
            <input type="text" id="new-image" placeholder="Link h√¨nh ·∫£nh" required>
            <input type="number" id="new-price" placeholder="Gi√° (vd: 100000)" required>
            <input type="text" id="new-description" placeholder="M√¥ t·∫£" required>
            <input type="text" id="new-category" placeholder="Lo·∫°i (vd: Tr√°i c√¢y)" required>
            <input type="number" id="new-stock" placeholder="S·ªë l∆∞·ª£ng" required min="1">
            <div class="actions">
                <button id="save-product"><i class="fa-solid fa-check"></i> L∆∞u</button>
                <button id="cancel-product"><i class="fa-solid fa-xmark"></i> H·ªßy</button>
            </div>
        </div>
    `;
    productList.prepend(card);

    // üü¢ L∆∞u s·∫£n ph·∫©m m·ªõi
    card.querySelector('#save-product').onclick = () => {
        const newProduct = {
            id: Date.now(), // t·∫°o id ng·∫´u nhi√™n d·ª±a tr√™n timestamp
            name: card.querySelector('#new-name').value,
            image: card.querySelector('#new-image').value,
            price: parseInt(card.querySelector('#new-price').value),
            description: card.querySelector('#new-description').value,
            category: card.querySelector('#new-category').value,
            stock: parseInt(card.querySelector('#new-stock').value),
            hidden: false
        };

        // Ki·ªÉm tra d·ªØ li·ªáu ƒë·∫ßu v√†o
        if (!newProduct.name || !newProduct.image || isNaN(newProduct.price)) {
            alert('Vui l√≤ng ƒëi·ªÅn ƒë·∫ßy ƒë·ªß th√¥ng tin h·ª£p l·ªá!');
            return;
        }

        const products = JSON.parse(localStorage.getItem('products')) || [];
        products.push(newProduct);
        localStorage.setItem('products', JSON.stringify(products));
        displayProducts(products);
    };

    // üî¥ H·ªßy th√™m s·∫£n ph·∫©m
    card.querySelector('#cancel-product').onclick = () => card.remove();
}




// ==========================
// üß© H√ÄM LOAD D·ªÆ LI·ªÜU L·∫¶N ƒê·∫¶U
// ==========================
async function loadProducts() {
    try {
        // 1Ô∏è‚É£ L·∫•y d·ªØ li·ªáu t·ª´ localStorage
        let products = JSON.parse(localStorage.getItem('products'));

        // 2Ô∏è‚É£ N·∫øu ƒë√£ c√≥ d·ªØ li·ªáu, ch·ªâ c·∫ßn hi·ªÉn th·ªã lu√¥n
        if (products && products.length > 0) {
            console.log("‚úÖ D·ªØ li·ªáu l·∫•y t·ª´ localStorage");
            displayProducts(products);
            return;
        }

        // 3Ô∏è‚É£ N·∫øu ch∆∞a c√≥, fetch t·ª´ file JSON
        console.log("üåê L·∫ßn ƒë·∫ßu truy c·∫≠p - ƒëang t·∫£i d·ªØ li·ªáu t·ª´ file JSON...");
        const response = await fetch('../data/products.json');

        // Ki·ªÉm tra ph·∫£n h·ªìi t·ª´ server
        if (!response.ok) {
            throw new Error(`Kh√¥ng th·ªÉ t·∫£i file products.json (status: ${response.status})`);
        }

        // 4Ô∏è‚É£ Chuy·ªÉn d·ªØ li·ªáu JSON sang object
        products = await response.json();

        // 5Ô∏è‚É£ L∆∞u v√†o localStorage ƒë·ªÉ d√πng cho l·∫ßn sau
        localStorage.setItem('products', JSON.stringify(products));

        console.log("‚úÖ D·ªØ li·ªáu ƒë√£ l∆∞u v√†o localStorage th√†nh c√¥ng");
        displayProducts(products);

    } catch (error) {
        console.error("‚ùå L·ªói khi load d·ªØ li·ªáu s·∫£n ph·∫©m:", error);
        alert("Kh√¥ng th·ªÉ t·∫£i d·ªØ li·ªáu s·∫£n ph·∫©m. Vui l√≤ng ki·ªÉm tra l·∫°i file JSON!");
    }
}




/* =====================================================
                üöÄ KHI TRANG V·ª™A LOAD
   ===================================================== */
window.addEventListener('DOMContentLoaded', () => {
    loadProducts(); // t·∫£i d·ªØ li·ªáu ban ƒë·∫ßu

    // G·∫Øn s·ª± ki·ªán cho n√∫t "Th√™m s·∫£n ph·∫©m"
    const addBtn = document.getElementById('add-product-btn');
    if (addBtn) addBtn.addEventListener('click', createAddProductCard);
});
